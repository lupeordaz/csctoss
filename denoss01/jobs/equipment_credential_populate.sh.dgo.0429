#!/bin/bash
#
# Populates the equipment_credential table based on values in equipment_model_credential table.
#
# $Id: $
#
source /home/postgres/.bash_profile

# this is the maximum equipment model id hard coded used to detect new equipment models
# if you get this email, inspect new model and determine if you need to add rows to equipment_model_credential table
# regardless, increment this variable to the new highest equipment_model_id value in equipment_model table
MAXEMOD=114

DATE=`date +%Y%m%d`
BASEDIR=/home/postgres/dba
LOGFILE=$BASEDIR/logs/equipment_credential_populate.$DATE

# call the equipment_credential_populate() function and capture results
psql -q -t -c "SELECT * FROM csctoss.equipment_credential_populate()" > $LOGFILE

# check output for SUCCESS, if not job failed and send email
if [ `grep "SUCCESS" $LOGFILE | wc -l` -ne 1 ]; then
  cat $LOGFILE | mail -s "Equipment Credential Populate Job for `hostname` FAILED!!!" dba@cctus.com
else
  # dont mail success
  #cat $LOGFILE | mail -s "Equipment Credential Populate Job (`hostname`) for $DATE" dba@cctus.com
  echo "SUCCESS"
fi

QRYEMOD=`psql -q -t -c "select max(equipment_model_id) from csctoss.equipment_model"`
if [ $MAXEMOD -lt $QRYEMOD ]; then
#  echo "One or more new equipment models exist over EMOD-ID $MAXEMOD. Please investigate." | mail -s "Equipment Model Alert" dba@cctus.com
#  for NAME in {"jprouty@contournetworks.com","cmitchell@cctus.com","dba@cctus.com"}; do
  for NAME in {"jprouty@contournetworks.com","nyoda@cctus.com","dba@cctus.com"}; do
    echo "One or more new equipment models exist over EMOD-ID $MAXEMOD. Please investigate." | mail -s "Equipment Model Alert" $NAME
  done
fi

# remove log files older than 7 days
find $BASEDIR/logs/equipment_credential_populate.* -mtime +7 -exec rm -f {} \;
exit 0
